<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.ddit.mapper.IAdminScholarshipMapper">

	<!-- 셀렉트바 이용 검색 -->
	 <!-- 처리 상태 조건문 -->
    <sql id="scholarshipType">
         <if test="searchType != '' and searchType == 1">
            and s.sch_type = '선차감'
        </if>
         <if test="searchType != '' and searchType == 2">
            and s.sch_type = '후지급'
        </if>
    </sql>

	<!-- 장학금 이름 조건문 -->
	<sql id="scholarshipName">
		<if
			test="searchName != null and searchName != '' and searchName != '99'">
			and s.sch_name like '%' || #{searchName} || '%'
		</if>
	</sql>
    
    <!-- 학과 조건문 -->
    <sql id="departmentCondition">
        <if test="searchDept != null and searchDept != '99'">
            and d.dept_no = #{searchDept}
        </if>
    </sql>
    
    <!-- 처리 상태 조건문 -->
    <sql id="statusCondition">
         <if test="searchStatus != '' and searchStatus == 1">
            and sr.com_det_c_no = 'C0201'
        </if>
         <if test="searchStatus != '' and searchStatus == 2">
            and sr.com_det_c_no = 'C0202'
        </if>
         <if test="searchStatus != '' and searchStatus == 3">
            and sr.com_det_c_no = 'C0203'
        </if>
    </sql>
    
    <!-- 학번 조건문 -->
	<sql id="studentIdCondition">
	    <if test="searchStuId != null  and !searchStuId.isEmpty()">
	        and sr.stu_no like '%' || #{searchStuId} || '%'
	    </if>
	</sql>
	
	 <!-- 학생 이름 조건문 -->
    <sql id="studentNameCondition">
        <if test="searchStuName != null and !searchStuName.isEmpty()">
            and st.stu_name like '%' || #{searchStuName} || '%'
        </if>
    </sql>
    
    
    <!-- 페이징 처리를 위해 행 count하기 -->
    <select id="selectScholarshipCount" parameterType="pagingVO" resultType="int">
        select count(s.sch_no)
        from scholarship s
        where 1=1
        <include refid="scholarshipType" />
    </select>

    <!-- 페이징 처리를 위한 selectScholarshipList 쿼리 -->
    <select id="selectScholarshipList" parameterType="pagingVO" resultType="scholarshipVO">
        select
            c.*
        from (
            select
                a.*, row_number() over(order by a.sch_no) as rnum
            from (
                select
                    s.sch_no, s.sch_name, s.sch_content, s.sch_req, s.sch_amount, s.sch_type, s.sch_max
                from scholarship s
                where 1=1
                <include refid="scholarshipType" />
                <include refid="scholarshipName" />
                order by s.sch_no
            ) a
        ) c
        <![CDATA[
            where c.rnum >= #{startRow} and c.rnum <= #{endRow}
        ]]>
    </select>

    <!-- 장학금 종류 상세 조회 -->
    <select id="scholarshipDetail" parameterType="String" resultType="scholarshipVO">
        select
            s.sch_no,
            s.sch_name,
            s.sch_content,
            s.sch_req,
            s.sch_amount,
            s.sch_type,
            s.sch_max
        from scholarship s
        where s.sch_no = #{schNo}
    </select>

    <!-- 장학 종류 등록 -->
    <insert id="scholarshipInsert" parameterType="scholarshipVO">
        insert into scholarship (
            sch_no, sch_name, sch_content, sch_req, sch_amount, sch_type, sch_max
        ) values (
            seq_scholarship.nextval, #{schName}, #{schContent}, #{schReq}, #{schAmount}, #{schType}, #{schMax}
        )
    </insert>

	<!-- 장학 종류 수정 -->
	<update id="scholarshipUpdate" parameterType="scholarshipVO">
        update scholarship
           set
	              sch_name = #{schName}
	            , sch_content = #{schContent}
	            , sch_req = #{schReq}
	            , sch_amount = #{schAmount}
	            , sch_type = #{schType}
	            , sch_max = #{schMax}
        where sch_no = #{schNo}
	</update>

    <!-- 장학 종류 삭제 -->
    <delete id="deleteScholarship" parameterType="String">
        delete from scholarship where sch_no = #{schNo}
    </delete>

    <!-- 장학신청 내역 페이징 처리 -->
    <select id="selectScholarshipRequestCount" parameterType="map" resultType="int">
        select count(sr.sch_rec_no)
        from scholarship_receive sr
        join scholarship s on sr.sch_no = s.sch_no
        join student st on sr.stu_no = st.stu_no
        join department d on st.dept_no = d.dept_no
        where 1=1
        <include refid="scholarshipType"/>
        <include refid="departmentCondition"/>
        <include refid="statusCondition"/>
        <include refid="studentIdCondition"/>
        <include refid="studentNameCondition"/>
    </select>

    <!-- 페이징처리 + 검색 + 필터링 기능이 포함된 장학 신청 내역 리스트 -->
    <select id="selectScholarshipRequestList" parameterType="pagingVO" resultType="scholarshipVO">
        select
            c.*, st.stu_name as stuName, d.dept_name as deptName
        from (
            select
                a.*, row_number() over(order by a.sch_apl_date desc) as rnum
            from (
                select 
                    sr.sch_rec_no
                    , sr.sch_no
                    , s.sch_name
                    , s.sch_type
                    , s.sch_amount
                    , sr.stu_no
                    , to_char(sr.sch_apl_date, 'YYYY-MM-DD') as sch_apl_date
                    , sr.rej_content
                    , to_char(sr.sch_rec_date, 'YYYY-MM-DD') as sch_rec_date
                    , sr.com_det_c_no
                    , sr.year
                    , sr.semester
                    , st.dept_no
                from scholarship_receive sr
                join scholarship s on sr.sch_no = s.sch_no
                join student st on sr.stu_no = st.stu_no
                join department d on st.dept_no = d.dept_no
                where 1=1
                <include refid="scholarshipType"/>
       		    <include refid="scholarshipName"/>
                <include refid="departmentCondition"/>
                <include refid="statusCondition"/>
                <include refid="studentIdCondition"/>
       		    <include refid="studentNameCondition"/>
            ) a
        ) c
        join student st on c.stu_no = st.stu_no
        join department d on st.dept_no = d.dept_no
        <![CDATA[
            where c.rnum >= #{startRow} and c.rnum <= #{endRow}
        ]]>
    </select>

    <!-- 전체 학과 목록 가져오기 -->
    <select id="getAllDepartments" resultType="departmentVO">
        select dept_no, dept_name from department
    </select>
    
    <!-- 필터링을 위한 전체 장학금 목록 가져오기 -->
    <select id="getScholarshipList" resultType="scholarshipVO">
    	select 
    			sch_name 
    	  from scholarship
    </select>
    
    <!-- 장학금 신청 상세보기 -->
    <select id="getScholarshipRequestDetail" parameterType="String" resultType="scholarshipVO">
        select
            sr.sch_rec_no,
            sr.sch_no,
            sr.stu_no,
            to_char(sr.sch_rec_date, 'YYYY-MM-DD') as sch_rec_date,
            to_char(sr.sch_apl_date, 'YYYY-MM-DD') as sch_apl_date,
            sr.com_det_c_no,
            sr.year, sr.semester,
            sr.rej_content,
            s.sch_name,
            s.sch_content,
            s.sch_req,
            s.sch_amount,
            s.sch_type,
            s.sch_max,
            sr.file_group_no
        from scholarship_receive sr
        left outer join scholarship s on sr.sch_no = s.sch_no
        where sr.sch_rec_no = #{schRecNo}
    </select>

    <!-- 미승인 처리 장학금 개별 승인 처리(상세보기 내에서) -->
    <update id="scholarshipRequestApprove" parameterType="String">
        update scholarship_receive
        set
            com_det_c_no = 'C0201',
            sch_rec_date = to_char(sysdate, 'YYYY-MM- DD')
        where sch_rec_no = #{schRecNo}
    </update>

    <!-- 미승인 처리 장학금 반려 처리(상세보기 내에서) -->
    <update id="scholarshipRequestWait">
        update scholarship_receive
           set com_det_c_no = 'C0203'
               , rej_content = #{rejContent}
        where sch_rec_no = #{schRecNo}
    </update>
    
    <!-- 미승인 처리 장학금 일괄 승인 처리(리스트에서) -->
    <update id="scholarshipRequestAgree" parameterType="string">
		update scholarship_receive
		set 
		  com_det_c_no = 'C0201'
      where 
          sch_rec_no = #{schRecNo}   
	</update>
 
 	<!-- 장학금 신청 통계를 위한 쿼리문 -->
	<select id="scholarshipStatistics" resultType="ScholarshipVO">
		select 
        		 com_det_c_no
        		, sch_name
		  from scholarship_receive sr, scholarship s
		  where  sr.sch_no = s.sch_no
	</select> 
	
    
</mapper>
