package kr.or.ddit.controller.admin;

import java.util.List;
import java.util.Map;

import javax.inject.Inject;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import kr.or.ddit.service.admin.inter.IAdminScholarshipService;
import kr.or.ddit.vo.ScholarshipVO;
import lombok.extern.slf4j.Slf4j;

// 관리자 - 장학금관리
@Controller
@Slf4j
@RequestMapping("/admin")
public class AdminScholarshipController {
	
	@Inject
	private IAdminScholarshipService scholarshipService;
	
	// 장학금 종류 리스트
	@RequestMapping(value = "/scholarshipList", method = RequestMethod.GET)
	public String scholarshipList(Model model) {
		log.info("scholarshipList()...! 장학금 종류 리스트 출력입니다.");
		
		List<ScholarshipVO> scholarshipList = scholarshipService.getScholarshipList();
		
		for(ScholarshipVO vo : scholarshipList) {
			log.info("@@@@@@@@@" + vo.toString());
		}
		
		model.addAttribute("scholarshipList", scholarshipList);
		
		return "admin/scholarship/scholarshipMain";
	}
	
	
	// 장학 신청 목록 조회
	@RequestMapping(value = "/scholarshipRequestList", method= RequestMethod.GET)
	public String scholarshipRequestList(Model model) {
	
		log.info("scholarshipRequestList()...! 장학금 신청 리스트 출력입니다.");
		
		List<ScholarshipVO> scholarshipRequestList = scholarshipService.getScholarshipRequestList();
		
		for(ScholarshipVO vo : scholarshipRequestList) {
			log.info("@@@@@@@@" + vo.toString());
		}

		model.addAttribute("scholarshipRequestList", scholarshipRequestList);
		
		return "admin/scholarship/scholarshipRequestMain";
		
	}

	// 장학 신청 세부 조회
	@RequestMapping(value="/scholarshipRequestDetail", method = RequestMethod.GET)
	public String scholarshipRequestDetail(Model model, String schRecNo) {
		
		log.info("scholarshipRequestDetail()...! 특정 신청 상세보기 버튼 클릭시 상세보기 입니다.");
		
		List<ScholarshipVO> scholarshipVO = scholarshipService.getScholarshipRequestDetail(schRecNo);
		
		
		log.info("####################################");
		log.info("@@@@@@@@@@@requestNo : " + schRecNo);
		log.info("scholarshipVO" + scholarshipVO);
		
		model.addAttribute("scholarshipVO", scholarshipVO);
		
		
		return "admin/scholarship/scholarshipRequestDetail";
	}
	
	// 장학 신청 승인 처리
	@RequestMapping(value="/scholarshipRequestsApprove", method = RequestMethod.POST)
	public String scholarshipRequestsApprove(String comDetCNo) {
		log.info("scholarshipRequestsApprove()...! 장학신청 처리입니다.");
		
		List<ScholarshipVO> scholarshipVO = scholarshipService.scholarshipRequestsApprove(comDetCNo);
		
		log.info("#########필터링 된 scholarshipVO : " + scholarshipVO);
		
		log.info("scholarshipVO " + scholarshipVO.size());
		
		scholarshipService.selectUnApproveScholarshipRequestList(comDetCNo);
		
		return "admin/scholarship/scholarshipRequestMain";
	}
	
	
}
