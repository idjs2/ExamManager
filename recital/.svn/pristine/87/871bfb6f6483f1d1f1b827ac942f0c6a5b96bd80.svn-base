package kr.or.ddit.controller.student;

import java.util.List;

import javax.inject.Inject;
import javax.servlet.http.HttpSession;

import org.apache.commons.lang.StringUtils;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;

import kr.or.ddit.service.student.inter.IStuConsultingService;
import kr.or.ddit.vo.ConsultingVO;
import kr.or.ddit.vo.PaginationInfoVO;
import kr.or.ddit.vo.ProfessorVO;
import kr.or.ddit.vo.StudentVO;
import lombok.extern.slf4j.Slf4j;

@Slf4j
@Controller
@RequestMapping("/student")
public class StuConsultionController {

	@Inject
	private IStuConsultingService consultingService; 
	
	// 내 상담내역 띄우기
	@RequestMapping(value="/consultingList", method = RequestMethod.GET)
	public String consultingMine(@RequestParam(name="page", required = false, defaultValue = "1") int currentPage,
			@RequestParam(required = false, defaultValue = "student") String searchType,
			@RequestParam(required = false) String searchWord, Model model, HttpSession session) {
		
		PaginationInfoVO<ConsultingVO> pagingVO = new PaginationInfoVO<ConsultingVO>();
		StudentVO studentVO = (StudentVO) session.getAttribute("stuVO");
		
		pagingVO.setLecNo(studentVO.getStuNo());
		// 상담 내역 조회 쿼리 필요		
		if(StringUtils.isNotBlank(searchWord)) {
//			pagingVO.setSearchType(searchType);
//			pagingVO.setSearchWord(searchWord);
			
			// 검색 후, 목록 페이지로 이동 할 때 검색된 내용을 적용시키기 위한 데이터 전달.
//			model.addAttribute("searchType", searchType);
//			model.addAttribute("searchWord", searchWord);
		}
		
		// 총 4가지의 필드 설정하기 위해서
		// 현제 페이지를 전달 후, start/endRow, start/endPage 설정		
		pagingVO.setCurrentPage(currentPage);
		// 총 게시글 수를 얻어온다.
		int totalRecord = consultingService.stuConsultingCount(pagingVO);
		
		// 총 게시글 수 전달 후, 총 페이지 수를 설정
		pagingVO.setTotalRecord(totalRecord);
		List<ConsultingVO> dataList =  consultingService.stuConsultingList(pagingVO);
		pagingVO.setDataList(dataList);
		model.addAttribute("pagingVO", pagingVO);
		
		return "student/consulting/mine";		
	}
	
	@RequestMapping(value="/consultingDetail", method = RequestMethod.GET)
	public String consultingDetail(String conNo, Model model) {
		
		ConsultingVO consultingVO =  consultingService.stuconsultingDetail(conNo);
		
		model.addAttribute("consultingVO", consultingVO);
		
		return "student/consulting/detail";
	}
	
}
