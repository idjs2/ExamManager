package kr.or.ddit.controller.student;

import java.util.List;

import javax.inject.Inject;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;

import kr.or.ddit.service.admin.inter.IAdminFacilityService;
import kr.or.ddit.service.student.facility.IStuFacService;
import kr.or.ddit.vo.FacilityReserveVO;
import kr.or.ddit.vo.FacilityVO;
import kr.or.ddit.vo.PaginationInfoVO;
import lombok.extern.slf4j.Slf4j;

@Controller
@Slf4j
@RequestMapping("/student")
public class StuFacController {
	
	@Inject
	private IStuFacService service;
	
	@Inject
	private IAdminFacilityService facilityService;
	
	@RequestMapping(value="/facDetail", method=RequestMethod.GET)
	public String facDetail(Model model, String facNo) {
		log.info("facDetail 실행...!");
		log.info("시설번호 : " + facNo);
		
		FacilityVO facVO = service.selectDetail(facNo); 
		FacilityReserveVO facreVO = service.read(facNo);
		
		model.addAttribute("facVO", facVO);
		model.addAttribute("facre", facreVO);
		return "student/fac/facDetail";
	}
	
	@RequestMapping(value = "/facMain", method = RequestMethod.GET)
	public String facStuList(@RequestParam(name="page", required = false, defaultValue = "1") int currentPage,
			@RequestParam(required = false, defaultValue = "99") String searchType,
			Model model) {
		log.info("시설 리스트 출력 메서드 ");
		
//		List<FacilityVO> facilityList =  facilityService.selectFacility();
		
		PaginationInfoVO<FacilityVO> pagingVO = new PaginationInfoVO<FacilityVO>();

		// 총 4가지의 필드 설정하기 위해서
		// 현제 페이지를 전달 후, start/endRow, start/endPage 설정		
		pagingVO.setCurrentPage(currentPage);
		pagingVO.setSearchType(searchType);
		pagingVO.setSearchWord("test");
		
		// 총 게시글 수를 얻어온다.
		int totalRecord = facilityService.selectFacilityCount(pagingVO);
		
		// 총 게시글 수 전달 후, 총 페이지 수를 설정
		pagingVO.setTotalRecord(totalRecord);
		List<FacilityVO> dataList =  facilityService.selectFacilityList(pagingVO);
		log.info("pagingVO searchType >> " + pagingVO.getSearchType());
		for(FacilityVO d: dataList)  log.info("dataList >> " + d.toString());
		pagingVO.setDataList(dataList);
		// 총 게시글 수가 포함된 PaginationInfoVO 객체를 넘겨주고 1페이지에 해당하는 10개(screenSize)의
		// 게시글을 얻어온다. (dataList)
		
		model.addAttribute("searchType", searchType);
		model.addAttribute("pagingVO", pagingVO);
		return "student/fac/facList";
	}
}
